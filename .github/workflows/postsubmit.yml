name: Postsubmit
on:
  push:
    branches: [ master ]

jobs:
  smoke:
    # TODO: Evaluate this workflow at ref head after this issue is resolved:
    # https://github.community/t/ref-head-in-reusable-workflows/203690/17
    #
    # Currently when you change this file in a pull request it will call the
    # presubmits from the main branch, which is not what you'd want if you're
    # developing on the workflows themselves.
    uses: karagog/db-provider/.github/workflows/presubmit.yml@master

  # Build and deploy a release candidate which we'll integration test in the following step.
  integrate:
    runs-on: ubuntu-latest
    needs: smoke
    outputs:
      # Output the digest for the image that gets built, so we can pull it in subsequent steps.
      digest: ${{ steps.deploy-candidate.outputs.digest }}
    steps:
    - uses: actions/checkout@v2

    - name: Setup Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Deploy Candidate
      id: deploy-candidate
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./containers/mysql/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mysql-db-provider:postsubmit

  test-and-deploy-latest:
    runs-on: ubuntu-latest
    needs: integrate

    container:
      image:  karagog/cloud-builder:latest

    services:
      # The database provider is needed to spawn database instances for integration tests.
      provider:
        # Notice that we use the exact same image that was built during pre-integration,
        # by referencing with its digest which we received as an output from the previous job.
        image: karagog/mysql-db-provider@${{ needs.integrate.outputs.digest }}
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_ROOT_HOST: "%"

          # We can reference the service's hostname because it's running in a Docker environment.
          PROVIDER_MYSQL_ADDRESS: database
          PROVIDER_MYSQL_PORT: 3306
          PROVIDER_PORT: 58615
          PROVIDER_MYSQL_USER: test
          PROVIDER_MYSQL_USER_PASSWORD: test
          PROVIDER_DB_INSTANCES: 20

      database:
        image: mysql:8.0
        volumes:
          # Using tmpfs dramatically improves the startup time and overall
          # performance of the service.
          - "tmpfs:/var/lib/mysql"
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_ROOT_HOST: "%"

    steps:
      - uses: actions/checkout@v2

      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Integration Tests
        run: go test -v ./... -tags=integration
        env:
          DB_INSTANCE_PROVIDER_ADDRESS: provider:58615

      # Integration tests passed, proceed to deploy:
      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # We deploy latest by tagging the release candidate we just tested.
      - name: Push Latest
        run: |
          docker tag karagog/mysql-db-provider@${{ needs.integrate.outputs.digest }} karagog/mysql-db-provider:latest
          docker push karagog/mysql-db-provider:latest
