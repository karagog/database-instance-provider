name: Integration Test (and Maybe Deploy)

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      deploy_label:
        description: "(Optional) The label to deploy to. If not specified then only integration tests will be run."
        default: ""
        required: false

jobs:
  test-and-maybe-deploy:
    runs-on: ubuntu-latest

    # Run the tests inside the container so they have direct access to the service containers.
    container:
      image:  golang:1.17

    services:
      # The database provider is needed to spawn database instances for
      # unit integration tests.
      database:
        image: mysql:8.0
        volumes:
          - "tmpfs:/var/lib/mysql"
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_ROOT_HOST: "%"

      provider:
        image: karagog/mysql-db-provider:${{ github.actor }}
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_ROOT_HOST: "%"

          # We can reference the service's hostname because it's running in a Docker environment.
          PROVIDER_MYSQL_ADDRESS: database
          PROVIDER_MYSQL_PORT: 3306
          PROVIDER_PORT: 58615
          PROVIDER_MYSQL_USER: test
          PROVIDER_MYSQL_USER_PASSWORD: test
          PROVIDER_DB_INSTANCES: 20

    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - uses: actions/checkout@v2

    # DO NOT SUBMIT
    - name: Dump input context
      env:
        JOB_CONTEXT: ${{ toJSON(input) }}
      run: echo "$JOB_CONTEXT"

    - name: Check Golang Format
      run: gofmt -s -w .

    - name: Integration Tests
      run: |
        go build -v ./...
        go test -v ./... -tags=integration

    - if: inputs.deploy_label != ''
      name: Setup Docker Build
      uses: docker/setup-buildx-action@v1

    - if: inputs.deploy_label != ''
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - if: inputs.deploy_label != ''
      name: Deploy
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./containers/mysql/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mysql-db-provider:${{ inputs.deploy_label }}
